,0
Accumulated time steps,"[0, 65, 131, 192, 258, 342, 404, 563, 635, 728]"
Episode reward,"[0, 136.47241613271598, 140.37989788836555, 130.3669857063759, 134.0403454705713, 171.62320735132343, 130.67589271880988, 258.8692724111512, 149.82907588917476, 146.52075743064262]"
Episode feedback,"[0.8, 0.7460317341899725, 0.6153846059171599, 0.6499999891666669, 0.41538460899408297, 0.7349397501814489, 0.5737704823972052, 0.7215189827751963, 0.5633802737552074, 0.5978260804584122]"
total seconds,"[0, 3.2845757007598877, 7.363877296447754, 11.399964570999146, 15.07870626449585, 21.94855761528015, 26.678717613220215, 38.298668384552, 43.524699449539185, 50.424221992492676]"
total minutes,"[0, 0.05474292834599813, 0.12273128827412923, 0.18999940951665242, 0.2513117710749308, 0.3658092935880025, 0.4446452935536703, 0.6383111397425334, 0.7254116574923197, 0.840403699874878]"
cummulative feedback,"[0, 47, 87, 126, 153, 214, 249, 363, 403, 458]"
e,"[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]"
buffer size,"[3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000]"
human model,"[True, True, True, True, True, True, True, True, True, True]"
tau,"[0.0003011, 0.0003011, 0.0003011, 0.0003011, 0.0003011, 0.0003011, 0.0003011, 0.0003011, 0.0003011, 0.0003011]"
total_success,"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"
total_success_div_episode,"[0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]"
total_policy_loss_agent,"[<tf.Tensor: shape=(), dtype=float32, numpy=1.6666672e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=1.666666e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=1.6666634e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=1.6666634e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=4.9999962e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=3.3333297e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=3.333327e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=1.6666634e-05>, <tf.Tensor: shape=(), dtype=float32, numpy=4.9999955e-05>]"
total_policy_loss_hm,"[<tf.Tensor: shape=(), dtype=float32, numpy=0.2865403>, <tf.Tensor: shape=(), dtype=float32, numpy=0.21892233>, <tf.Tensor: shape=(), dtype=float32, numpy=0.27583244>, <tf.Tensor: shape=(), dtype=float32, numpy=0.22640264>, <tf.Tensor: shape=(), dtype=float32, numpy=0.23938751>, <tf.Tensor: shape=(), dtype=float32, numpy=0.24385382>, <tf.Tensor: shape=(), dtype=float32, numpy=0.3527591>, <tf.Tensor: shape=(), dtype=float32, numpy=0.26693287>, <tf.Tensor: shape=(), dtype=float32, numpy=0.1800824>]"
